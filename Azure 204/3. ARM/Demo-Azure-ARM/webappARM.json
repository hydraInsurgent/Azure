{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "1213485452188591183"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location to deploy the service resources"
      }
    },
    "resourcePrefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix to give all resource names"
      }
    }
  },
  "variables": {
    "resourceName": "[toLower(format('{0}-{1}', parameters('resourcePrefix'), uniqueString(resourceGroup().id)))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('resourceName'), 'metadata')]",
      "properties": {
        "CURRENT_STACK": "dotnet"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('resourceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('resourceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('resourceName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Bluefield",
        "Request_Source": "rest",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[take(replace(variables('resourceName'), '-', ''), 24)]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', take(replace(variables('resourceName'), '-', ''), 24), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', take(replace(variables('resourceName'), '-', ''), 24))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', take(replace(variables('resourceName'), '-', ''), 24), 'default', 'widgets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', take(replace(variables('resourceName'), '-', ''), 24), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('resourceName')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "sku": {
        "name": "S1"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('resourceName')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('resourceName'))]",
        "httpsOnly": true,
        "storageAccountRequired": false,
        "clientCertMode": "Optional",
        "clientCertExclusionPaths": "/health",
        "siteConfig": {
          "healthCheckPath": "/health",
          "alwaysOn": true,
          "ftpsState": "Disabled",
          "http20Enabled": true,
          "minTlsVersion": "1.2",
          "netFrameworkVersion": "v6.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('resourceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('resourceName'))]",
      "name": "[format('{0}-diagnostics', variables('resourceName'))]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceName'))]",
        "logs": [
          {
            "category": "AppServiceHTTPLogs",
            "enabled": true
          },
          {
            "category": "AppServiceAppLogs",
            "enabled": true
          },
          {
            "category": "AppServiceAuditLogs",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('resourceName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('resourceName'), 'appsettings')]",
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('resourceName')), '2020-02-02').InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', variables('resourceName')), '2020-02-02').ConnectionString]",
        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
        "Storage:ConnectionString": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(resourceId('Microsoft.KeyVault/vaults/secrets', take(variables('resourceName'), 24), 'StorageAccountConnectionString'), '2022-07-01').secretUri)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('resourceName'))]",
        "[resourceId('Microsoft.Web/sites', variables('resourceName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', take(variables('resourceName'), 24), 'StorageAccountConnectionString')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[take(variables('resourceName'), 24)]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [],
        "enableRbacAuthorization": true
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', take(variables('resourceName'), 24))]",
      "name": "[format('{0}-diagnostics', variables('resourceName'))]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceName'))]",
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true
          },
          {
            "category": "AzurePolicyEvaluationDetails",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', take(variables('resourceName'), 24))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', take(variables('resourceName'), 24), 'StorageAccountConnectionString')]",
      "properties": {
        "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', take(replace(variables('resourceName'), '-', ''), 24), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', take(replace(variables('resourceName'), '-', ''), 24)), '2022-09-01').keys[0].value)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', take(variables('resourceName'), 24))]",
        "[resourceId('Microsoft.Storage/storageAccounts', take(replace(variables('resourceName'), '-', ''), 24))]"
      ]
    }
  ],
  "outputs": {
    "appServiceName": {
      "type": "string",
      "value": "[variables('resourceName')]"
    }
  }
}